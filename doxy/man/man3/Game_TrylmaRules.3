.TH "Game.TrylmaRules" 3 "Thu Jan 27 2022" "Trylma" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Game.TrylmaRules
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBGame\&.Rules\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTrylmaRules\fP (int \fBplayersCount\fP)"
.br
.ti -1c
.RI "boolean \fBisStartingFieldInTargetTriangle\fP (\fBBoard\fP board, int startMoveField, int currentPlayer)"
.br
.ti -1c
.RI "boolean \fBisWinner\fP (\fBGame\fP game, int currentPlayer)"
.br
.ti -1c
.RI "boolean \fBmoveIsCorrect\fP (\fBBoard\fP board, int endMoveField)"
.br
.ti -1c
.RI "synchronized void \fBsetAvailableFields\fP (\fBBoard\fP board, \fBBoardField\fP currField, boolean isFirstCheck)"
.br
.ti -1c
.RI "synchronized void \fBtryToJump\fP (\fBBoard\fP board, \fBBoardField\fP currField, \fBBoardField\fP fieldToPass)"
.br
.ti -1c
.RI "synchronized ArrayList< \fBBoardField\fP > \fBfindNeighbors\fP (\fBBoard\fP board, \fBBoardField\fP currField)"
.br
.ti -1c
.RI "ArrayList< Integer > \fBgetAvailableFields\fP ()"
.br
.ti -1c
.RI "void \fBresetAvailableFields\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "ArrayList< Integer > \fBavailableFields\fP = new ArrayList<>()"
.br
.ti -1c
.RI "final int \fBplayersCount\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBGame\fP rules After current player first click it maps all available fields player can move to from the field he selected\&. Based on that, after second click it checks if the move is correct\&. It also can check if player won\&. 
.PP
Definition at line 16 of file TrylmaRules\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Game\&.TrylmaRules\&.TrylmaRules (int playersCount)"
Basic constructor 
.PP
\fBParameters\fP
.RS 4
\fIplayersCount\fP amount of players playing the game 
.RE
.PP

.PP
Definition at line 25 of file TrylmaRules\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "synchronized ArrayList<\fBBoardField\fP> Game\&.TrylmaRules\&.findNeighbors (\fBBoard\fP board, \fBBoardField\fP currField)"
Finds all neighbors of given field and returns them in form of an array list
.PP
\fBParameters\fP
.RS 4
\fIboard\fP current board 
.br
\fIcurrField\fP field we are on 
.RE
.PP
\fBReturns\fP
.RS 4
all fields that are neighbors to currField 
.RE
.PP

.PP
Definition at line 288 of file TrylmaRules\&.java\&.
.SS "ArrayList<Integer> Game\&.TrylmaRules\&.getAvailableFields ()"

.PP
\fBReturns\fP
.RS 4
returns all available fields 
.RE
.PP

.PP
Definition at line 324 of file TrylmaRules\&.java\&.
.SS "boolean Game\&.TrylmaRules\&.isStartingFieldInTargetTriangle (\fBBoard\fP board, int startMoveField, int currentPlayer)"
Checks if given field is in target area 
.PP
\fBParameters\fP
.RS 4
\fIboard\fP current board 
.br
\fIstartMoveField\fP the field player is on 
.br
\fIcurrentPlayer\fP id of the current player 
.RE
.PP
\fBReturns\fP
.RS 4
true if field is in target area 
.RE
.PP

.PP
Definition at line 37 of file TrylmaRules\&.java\&.
.SS "boolean Game\&.TrylmaRules\&.isWinner (\fBGame\fP game, int playerID)"
Rule set that determines if given player won the game
.PP
\fBParameters\fP
.RS 4
\fIgame\fP the game that is being played 
.br
\fIplayerID\fP id of player being checked 
.RE
.PP
\fBReturns\fP
.RS 4
true if player won the game 
.RE
.PP

.PP
Implements \fBGame\&.Rules\fP\&.
.PP
Definition at line 126 of file TrylmaRules\&.java\&.
.SS "boolean Game\&.TrylmaRules\&.moveIsCorrect (\fBBoard\fP board, int endMoveField)"
Rule set that determines if given move is correct\&. Checks if selected field is in Available fields\&. It is checked after second click by current player\&.
.PP
\fBParameters\fP
.RS 4
\fIboard\fP the game board in current state 
.br
\fIendMoveField\fP the field player is trying to move to 
.RE
.PP
\fBReturns\fP
.RS 4
true if move is correct 
.RE
.PP

.PP
Implements \fBGame\&.Rules\fP\&.
.PP
Definition at line 213 of file TrylmaRules\&.java\&.
.SS "void Game\&.TrylmaRules\&.resetAvailableFields ()"
Resets available fields after each move 
.PP
Definition at line 332 of file TrylmaRules\&.java\&.
.SS "synchronized void Game\&.TrylmaRules\&.setAvailableFields (\fBBoard\fP board, \fBBoardField\fP startField, boolean isFirstCheck)"
Rule set that maps legal fields that you can move to from selected field\&. It is checked after first click by current player\&.
.PP
\fBParameters\fP
.RS 4
\fIboard\fP 
.br
\fIstartField\fP 
.br
\fIisFirstCheck\fP 
.RE
.PP

.PP
Implements \fBGame\&.Rules\fP\&.
.PP
Definition at line 218 of file TrylmaRules\&.java\&.
.SS "synchronized void Game\&.TrylmaRules\&.tryToJump (\fBBoard\fP board, \fBBoardField\fP currField, \fBBoardField\fP fieldToPass)"
\fBRules\fP responsible for jumping Adds fields you can jump on to available fields
.PP
\fBParameters\fP
.RS 4
\fIboard\fP current board 
.br
\fIcurrField\fP field we are on 
.br
\fIfieldToPass\fP field we want to jump over 
.RE
.PP

.PP
Definition at line 251 of file TrylmaRules\&.java\&.
.SH "Member Data Documentation"
.PP 
.SS "ArrayList<Integer> Game\&.TrylmaRules\&.availableFields = new ArrayList<>()\fC [private]\fP"

.PP
Definition at line 17 of file TrylmaRules\&.java\&.
.SS "final int Game\&.TrylmaRules\&.playersCount\fC [private]\fP"

.PP
Definition at line 18 of file TrylmaRules\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Trylma from the source code\&.
